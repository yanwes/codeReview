name: Code Review with Flow

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  review-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyGithub gitpython

      - name: Run Code Review with Flow
        env:
          FLOW_CLIENT_ID: ${{ secrets.FLOW_CLIENT_ID }}
          FLOW_CLIENT_SECRET: ${{ secrets.FLOW_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_NAME: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          python <<EOF
          import os
          import requests
          import socket
          import ssl
          from github import Github
          
          # Configurar DNS alternativo
          original_getaddrinfo = socket.getaddrinfo
          def getaddrinfo_with_dns(*args, **kwargs):
              return original_getaddrinfo(*args, **kwargs, nameserver='8.8.8.8')
          socket.getaddrinfo = getaddrinfo_with_dns
          
          # Configuração do Flow API
          flow_client_id = os.environ['FLOW_CLIENT_ID']
          flow_client_secret = os.environ['FLOW_CLIENT_SECRET']
          
          # Função para criar uma sessão SSL personalizada
          def create_ssl_context():
              context = ssl.create_default_context()
              context.check_hostname = False
              return context
          
          # Configurar sessão com SSL personalizado
          session = requests.Session()
          session.mount('https://', requests.adapters.HTTPAdapter(max_retries=3))
          session.verify = create_ssl_context()
          
          # Autenticação no Flow
          auth_url = "https://api.flowai.com/oauth/token"
          auth_data = {
              "grant_type": "client_credentials",
              "client_id": flow_client_id,
              "client_secret": flow_client_secret
          }
          
          try:
              auth_response = session.post(auth_url, data=auth_data)
              auth_response.raise_for_status()
              access_token = auth_response.json()['access_token']
              print("Autenticação bem-sucedida!")
          except requests.exceptions.RequestException as e:
              print(f"Erro na autenticação: {e}")
              print(f"Resposta do servidor: {auth_response.text if 'auth_response' in locals() else 'Nenhuma resposta'}")
              raise
          
          # Resto do código para revisão...
          # (Adicione aqui o código para obter as alterações do PR e chamar a API do Flow)
          
          print("Script concluído com sucesso!")
          EOF

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Pipeline falhou! Por favor, verifique os logs para mais detalhes.'
            })